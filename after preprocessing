from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# 1. Feature scaling (standardize the numerical features)
scaler = StandardScaler()

# Scaling the features (excluding target variable 'Price')
df[['SquareFeet', 'NumRooms', 'Age', 'DistanceToCity']] = scaler.fit_transform(df[['SquareFeet', 'NumRooms', 'Age', 'DistanceToCity']])

# 2. Split the dataset into features (X) and target (y)
X = df.drop('Price', axis=1)
y = df['Price']

# Split into training and testing sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Train a Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# 4. Predict house prices on the test set
y_pred = model.predict(X_test)

# 5. Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Display after preprocessing and model results
print("\nAfter Preprocessing and Model Evaluation:")
print("Predicted House Prices:", y_pred)
print("Mean Squared Error (MSE):", mse)
print("R-squared (R2) Score:", r2)


output

After Preprocessing and Model Evaluation:
Predicted House Prices: [571875.   541250. ]
Mean Squared Error (MSE): 15625000.0
R-squared (R2) Score: 0.95
